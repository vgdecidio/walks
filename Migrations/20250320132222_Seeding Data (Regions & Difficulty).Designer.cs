// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Walks.API.Data;

#nullable disable

namespace Walks.API.Migrations
{
    [DbContext(typeof(WalksDbContext))]
    [Migration("20250320132222_Seeding Data (Regions & Difficulty)")]
    partial class SeedingDataRegionsDifficulty
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Walks.API.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficuties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3767c8ab-dbe7-4790-a8c7-898f8e04f988"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("2e39cca1-41f5-449b-a95b-17ffdfacae64"),
                            Name = "Mediam"
                        },
                        new
                        {
                            Id = new Guid("da192823-7fe1-4a8c-bd47-b3aa6a8214ea"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("Walks.API.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ee7ecbba-c423-4272-946c-444b1073a1a0"),
                            Code = "N",
                            Name = "North",
                            RegionImageUrl = "https://dummyimage.com/600x400/000/fff"
                        },
                        new
                        {
                            Id = new Guid("093dd075-bbe3-43d9-ac27-b0668c8b81c8"),
                            Code = "W",
                            Name = "West",
                            RegionImageUrl = "https://dummyimage.com/600x400/000/fff"
                        },
                        new
                        {
                            Id = new Guid("0eb161a0-47b4-4d3f-8f83-8565cb7d1d78"),
                            Code = "E",
                            Name = "East",
                            RegionImageUrl = "https://dummyimage.com/600x400/000/fff"
                        },
                        new
                        {
                            Id = new Guid("6548231d-41ca-47a6-80b5-f7ab46fe175c"),
                            Code = "S",
                            Name = "South",
                            RegionImageUrl = "https://dummyimage.com/600x400/000/fff"
                        });
                });

            modelBuilder.Entity("Walks.API.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("Walks.API.Models.Domain.Walk", b =>
                {
                    b.HasOne("Walks.API.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Walks.API.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
